@using YM.Common
@model UnionSurvey.Model.SurveyHomeModel

@{
    ViewData["Title"] = "Survey";
}

@section Styles {
    <!-- Link Swiper's CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

    <!-- Custom CSS (optional) -->
    <style>
        .counter {
            font-size: 3rem;
        }

        .swiper {
            width: 100%;
            height: 100%;
            /* background: #05103A; */
        }

        .swiper-slide {
            font-size: 18px;
            padding-left: 12%;
            padding-right: 12%;
            padding-top: 10px;
        }

        /* The navigation links inside the overlay */
        .overlay {
            top: 0px !important;
            height: 100% !important;
            background: rgb(102 206 235 / 20%) !important;
            position: absolute;
            top: -5px;
            left: 0;
            width: 100%;
            height: 82%;
            background: rgba(16, 16, 16, 0);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 2;
        }

        .progress-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .progress-circle {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: conic-gradient( #4caf50 var(--progress, 0%), #ddd var(--progress, 0%) );
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
        }

            .progress-circle::before {
                content: '';
                width: 130px;
                height: 130px;
                border-radius: 50%;
                background: #fff;
                position: absolute;
            }

        .progress-text {
            font-size: 24px;
            color: #4caf50;
            position: relative;
        }

    </style>
}



<div class="card mb-3">
    <div class="card-body px-xxl-0 p-3">
        <div class="row g-0">
            <div class="col-sm-4 px-3 text-center border-end-sm border-bottom border-bottom-sm-0 py-2 p-xxl-0">
                <div class="icon-circle icon-circle-warning"><span class="fs-7 fas fa-dollar-sign text-warning"></span></div>
                <h4 class="mb-1 font-sans-serif"><span class="text-700 mx-1">$</span><span class="fw-normal text-600" id="surveyearn">0</span></h4>
                <p class="fs-10 fw-semi-bold mb-0">Survey's earn'</p>
            </div>
            <div class="col-sm-4 px-3 text-center border-end-sm border-bottom border-bottom-sm-0 p-xxl-0 py-2">
                <div class="icon-circle icon-circle-primary"><span class="fs-7 fas fa-user-graduate text-primary"></span></div>
                <h4 class="mb-1 font-sans-serif"><span class="text-700 mx-1">$</span><span class="fw-normal text-600">@Model.TodayIncome</span></h4>
                <p class="fs-10 fw-semi-bold mb-0">Today's income</p>
            </div>
            <div class="col-sm-4 px-3 text-center p-xxl-0 py-2">
                <div class="icon-circle icon-circle-info"><span class="fs-7 fas fa-chalkboard-teacher text-info"></span></div>
                <h4 class="mb-1 font-sans-serif"><span class="text-700 mx-1">$</span><span class="fw-normal text-600">@Model.TeamComission</span></h4>
                <p class="fs-10 fw-semi-bold mb-0">Team's commission</p>
            </div>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header">
        <div id="@Model.Survey!.SurveyDivId" class="bg-white dark__bg-1100 d-flex flex-between-center align-items-center p-x1 rounded-3 shadow-sm card-view-height">
            <div class="d-flex align-items-start align-items-sm-center">
                <div class="avatar avatar-xl avatar-3xl">
                    @if (Model.Survey!.LogoName.ToHasValue())
                    {
                        <img class="rounded-circle" src="@Model.Survey!.LogoFullPath" alt="@Model.Survey!.Title" />
                    }
                    else
                    {
                        <div class="avatar-name rounded-circle"><span>@Model.Survey!.Title.ToSafeInitial()</span></div>
                    }
                </div>
                <div class="ms-1 ms-sm-3">
                    <h5 class="fw-semi-bold mb-3 mb-sm-2 Title">
                        @Model.Survey!.Title
                    </h5>
                    <div class="row align-items-center gx-0 gy-2">
                        <h6 class="client mb-0 Description">
                            @Model.Survey!.Description
                        </h6>
                    </div>
                </div>
            </div>
            <h6 class="text-warning fs-10 my-2">$@Model.Survey!.SurveyAmount</h6>
        </div>
    </div>
    <form asp-action="Survey" asp-controller="Home" method="post" id="fromsubmit">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="@Model.Survey" />
        <input type="hidden" asp-for="@Model.Survey!.SurveyId" />
        <input type="hidden" asp-for="@Model.Survey!.Title" />
        <div class="card-body">
            <div class="list-group-item mb-0 rounded-0 py-3 px-x1 list-group-item-warning border-x-0 border-top-0 mb-3" style="display:none;" id="questionalert">
                <div class="row flex-between-center">
                    <div class="col">
                        <div class="d-flex">
                            <div class="fas fa-circle mt-1 fs-11"></div>
                            <p class="fs-10 ps-2 mb-0"><strong>Please answer the following question or spent at least 10 seconds in each question.</strong></p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12" id="lsw">
                <div class="swiper mySwiper">
                    <div class="swiper-wrapper">
                        @for (int i = 0; i < Model.Questions.Count; i++)
                        {
                            var questionId = $"q{Model.Questions[i].QuestionId}";

                            <input type="hidden" asp-for="@Model.Questions[i].QuestionId" />
                            <input type="hidden" asp-for="@Model.Questions[i].Amount" />

                            <div class="swiper-slide">
                                <input type="hidden" class="counterhidden" asp-for="@Model.Questions[i].SpendTime" />
                                <div class="border">
                                    <div class="card-header d-flex flex-between-center bg-body-tertiary py-2">
                                        <h6 class="mb-0">@Model.Questions[i].Question</h6>
                                        <h6 class="mb-0 text-warning amount @questionId" data-isadded="0">$@Model.Questions[i].Amount</h6>
                                    </div>
                                    <div class="card-body text">
                                        @if (Model.Questions[i].Option1.ToHasValue())
                                        {
                                            var op1 = $"op1{Model.Questions[i].QuestionId}";

                                            <div class="form-check">
                                                <input class="form-check-input p-2" onclick="handleRadioClick('@Model.Questions[i].QuestionId', 1, '@Model.Questions[i].Amount')" id="@op1"
                                                       type="radio"
                                                       value="1"
                                                       asp-for="@Model.Questions[i].SelectedOption">
                                                <label class="form-check-label fs-9 fw-normal text-700" for="@op1">
                                                    @Model.Questions[i].Option1
                                                </label>
                                            </div>
                                        }
                                        @if (Model.Questions[i].Option2.ToHasValue())
                                        {
                                            var op2 = $"op2{Model.Questions[i].QuestionId}";

                                            <div class="form-check">
                                                <input class="form-check-input p-2" onclick="handleRadioClick('@Model.Questions[i].QuestionId', 2, '@Model.Questions[i].Amount')" id="@op2"
                                                       type="radio"
                                                       value="2"
                                                       asp-for="@Model.Questions[i].SelectedOption">
                                                <label class="form-check-label fs-9 fw-normal text-700" for="@op2">
                                                    @Model.Questions[i].Option2
                                                </label>
                                            </div>
                                        }
                                        @if (Model.Questions[i].Option3.ToHasValue())
                                        {
                                            var op3 = $"op3{Model.Questions[i].QuestionId}";

                                            <div class="form-check">
                                                <input class="form-check-input p-2" onclick="handleRadioClick('@Model.Questions[i].QuestionId', 3, '@Model.Questions[i].Amount')" id="@op3"
                                                       type="radio"
                                                       value="3"
                                                       asp-for="@Model.Questions[i].SelectedOption">
                                                <label class="form-check-label fs-9 fw-normal text-700" for="@op3">
                                                    @Model.Questions[i].Option3
                                                </label>
                                            </div>
                                        }
                                        @if (Model.Questions[i].Option4.ToHasValue())
                                        {
                                            var op4 = $"op1{Model.Questions[i].QuestionId}";

                                            <div class="form-check">
                                                <input class="form-check-input p-2" onclick="handleRadioClick('@Model.Questions[i].QuestionId', 4, '@Model.Questions[i].Amount')" id="@op4"
                                                       type="radio"
                                                       value="4"
                                                       asp-for="@Model.Questions[i].SelectedOption">
                                                <label class="form-check-label fs-9 fw-normal text-700" for="@op4">
                                                    @Model.Questions[i].Option4
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="swiper-button-next"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-pagination"></div>
                </div>
            </div>
        </div>
        <div class="card-footer d-flex flex-between-center align-items-center">
            <p class="text-warning-emphasis" id="surveyCompletedText"><strong> Your survey is not completed till now.</strong></p>
            <input type="button" class="btn btn-primary" value="Save Survey" disabled id="surSubmit" />
        </div>
    </form>
</div>



@section Scripts {
    <!-- Swiper JS -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

    <!-- Initialize Swiper -->
    <script>
        var isLastSlide = false;

        $(document).ready(function () {

            $('#loader').hide();
            let cycleChange = 0;

            var swiper = new Swiper(".mySwiper", {
                loop: false,
                pagination: {
                    el: ".swiper-pagination",
                    type: "fraction",
                    clickable: true,
                },
                navigation: {
                    prevEl: ".swiper-button-prev",
                    nextEl: '.swiper-button-next',
                },
                on: {
                    init: function (e) {
                        console.log('Swiper initialized!');
                    },
                    click: function (e) {
                        var currentSlide = this.slides[this.activeIndex];
                        var timeSpent = $(currentSlide).find('.counterhidden');
                        setTimeout(function () { $(timeSpent).val(10); }, 10000);
                        isLastSlide = this.isEnd;
                    },
                    activeIndexChange: function (e) {

                        $('#questionalert').hide();

                        if (this.activeIndex > this.previousIndex) {

                            const currentSlide = this.slides[this.previousIndex];
                            cycleChange = 1;
                            var radioChecked = $(currentSlide).find('input.form-check-input:checked');
                            var timeSpent = $(currentSlide).find('.counterhidden');
                            var currentCounterValue = $(timeSpent).val() * 1;

                            if (radioChecked === null || radioChecked.length <= 0 || currentCounterValue < 10) {
                                e.slidePrev();
                                $('#questionalert').show();
                            }

                        }
                    },

                }
            });

            function getCurrentSlide() {
                return swiper.slides[swiper.previousIndex];
            }

            $('#surSubmit').on('click', function () {
                if (isLastSlide) {

                    let totalSeconds = $('.counterhidden').length * 10;
                    let totalSpentSeconds = 0;

                    $('.counterhidden').each(function () {
                        totalSpentSeconds += $(this).val() * 1;
                    })

                    if (totalSeconds === totalSpentSeconds) {
                        $('#fromsubmit').submit();
                    }
                }
            });
        })
        function handleRadioClick(questionId, selectedOption, questionAmount) {
            BuildLoader();
            CounterIncrement(questionId, questionAmount);
        }
        function CounterIncrement(questionId, questionAmount) {
            $('#loader').show();
            const seconds = 11;
            let timeLeft = 0;

            function CountDown() {
                timeLeft++;

                if (timeLeft < seconds) {
                    PogressValue(timeLeft);
                    setTimeout(CountDown, 1000);
                }

                if (timeLeft === seconds) {

                    if (isLastSlide) {
                        let totalSeconds = $('.counterhidden').length * 10;
                        let totalSpentSeconds = 0;

                        $('.counterhidden').each(function () {
                            totalSpentSeconds += $(this).val() * 1;
                        })

                        if (totalSeconds === totalSpentSeconds) {

                            $('#surveyCompletedText').text('Your survey is completed.');
                            $('#surSubmit').prop('disabled', false);
                        }
                    }

                    var amountCtl = $(`.amount.q${questionId}`);
                    var amountStatus = UnionSurvey.Utilities.GetDataValueFromHtmlControl('', amountCtl, 'isadded');

                    if (amountStatus * 1 === 0) {
                        var lastAmount = $('#surveyearn').text() * 1;
                        let currentAmount = UnionSurvey.Convertion.ToSafeFloor((questionAmount * 1 + lastAmount), 2);
                        $('#surveyearn').text(currentAmount);
                        UnionSurvey.Utilities.SetDataValueFromHtmlControl('', amountCtl, 'isadded', 1);
                    }
                    $('#loader').hide();
                    $('#loader').remove();

                }
            };

            PogressValue(timeLeft);
            setTimeout(CountDown, 1000);
        }
        function PogressValue(val) {
            $('.progress-circle').css('--progress', val * 10 + '%');
            $('.progress-text').text(val);
        }
        function BuildLoader() {

            // Create the elements
            var $loader = $('<div>', { id: 'loader', class: 'overlay' });
            var $progressContainer = $('<div>', { class: 'progress-container' });
            var $progressCircle = $('<div>', { class: 'progress-circle' }).css('--progress', '0%');
            var $progressText = $('<span>', { class: 'progress-text', text: '0%' });

            // Append the elements
            $progressCircle.append($progressText);
            $progressContainer.append($progressCircle);
            $loader.append($progressContainer);

            $('#lsw').append($loader);
        }

    </script>

} 